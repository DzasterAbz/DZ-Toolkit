Dockerfile is a simple text file to build DockerImage

FROM
RUN
CMD

Step-1
Create a file named Dockerfile in the Repository

COMMANDS
$ docker build [Dockerfile Location]
$ docker build -t DZToolkit:1.0 (Naming & Version)
$ docker images (Check Docker Images)

============================================================================================================================================================================
CURRENT DEVELOPING IMAGE

# KALI LINUX AS BASE IMAGE
FROM kalilinux/kali-rolling:latest

# DOCKERFILE OWNER-MAINTAINER
LABEL maintainer="DzasterAbz"

# DEFAULT ENVIRONMENT
ENV HOME /root

# GET NON-INTERACTIVE SHELL
ENV DEBIAN_FRONTEND = noninteractive

# CONTAINER LABEL
CMD ["echo", "Welcome to DzasterAbz WAPT & BugBounty Toolkit - Version 1.0"]
CMD ["echo", "============================================================"]
CMD ["echo", "Inspired by Hackersploit - AlexisAhmed"]

# CREATING DIRECTORIES
RUN mkdir ${HOME}/Tools && \
    mkdir ${HOME}/Wordlists && \
    mkdir ${HOME}/Bookmarks-Cheatsheets && \
    mkdir ${HOME}/Tips-Methodologies && \
    mkdir ${HOME}/WorkingDirectory

# DEFAULT WORKING LOCATION
WORKDIR ${HOME}/WorkingDirectory

# OPEN PORTS
EXPOSE 80/tcp 443/tcp

# TIMEZONE DATA
RUN ln -fs /usr/share/zoneinfo/Asia/Calcutta /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata

# WORDLISTS
RUN apt-get -y install seclists \
    jq

# BASIC TOOLS
RUN apt-get update && \
    apt-get upgrade && \
    apt-get full-upgrade && \
    apt-get install -y --no-install-recommends \
    build-essentials \
    tmux \
    gcc \
    iputils \
    dnsutils \
    net-tools \
    git \
    nano \
    gdb \
    wget \
    vim \
    curl \
    awscli \
    tzdata \
    make \
    man-db \
    python \
    python3 \
    python-pip \
    python3-pip \
    perl \
    nasm \
    openssl \
    snapd \
    zsh \
    openjdk-8-jre \
    ruby \
    postgresql \
    && rm -rf /var/lib/apt/lists/*

# PYTHON CONFIGURATION
RUN python -m pip install --upgrade setuptools && python3 -m pip install --upgrade setuptools && python3 -m pip install --upgrade setuptools

# MAIN TOOLS
RUN apt-get install nmap \
    whois \
    nikto \
    dirb \
    sublist3r \
    zaproxy \
    whatweb \
    dirbuster \
    sqlmap \
    wpscan \
    uniscan \
    exploitdb \
    exploitdb-bin-sploits \
    exploitdb-papers \
    gobuster \
    hashcat \
    sslscan \
    hydra \
    w3af-console \
    wireshark \
    tcpdump \
    tshark \
    arachni \
    websploit \
    theharvester \
    routersploit \
    snort \
    masscan \
    metasploit-framework

# METASPLOIT WITH DEPENDENCIES
RUN add-apt-repository -y ppa:webupd8team/java && \
    apt-get -y update && \
    apt-get -y install oracle-java8-installer && \
    apt-get -y update && \
    apt-get -y upgrade && \
    apt-get -y install build-essential \
    libreadline-dev \
    libssl-dev \
    libpq5 \
    libpq-dev \
    libreadline5 \
    libsqlite3-dev \
    libpcap-dev \
    git-core \
    autoconf \
    postgresql \
    pgadmin3 \
    curl \
    zlib1g-dev \
    libxml2-dev \
    libxslt1-dev \
    libyaml-dev \
    gawk \
    bison \
    libffi-dev \
    libgdbm-dev \
    libncurses5-dev \
    libtool \
    sqlite3 \
    libgmp-dev \
    gnupg2 \ 
    dirmngr

# INSTALLING DEPENDENCIES (Cloned from AlexisAhmed)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    # sqlmap
    sqlmap \
    # dirb
    dirb \
    # dnsenum
    cpanminus \
    # wfuzz
    python-pycurl \
    # knock
    python-dnspython \
    # massdns
    libldns-dev \
    # wpcscan
    libcurl4-openssl-dev \
    libxml2 \
    libxml2-dev \
    libxslt1-dev \
    ruby-dev \
    libgmp-dev \
    zlib1g-dev \
    # masscan
    libpcap-dev \
    # theharvester
    python3.7 \
    # joomscan
    libwww-perl \
    # hydra
    hydra \
    # dnsrecon
    dnsrecon \
    # zsh
    powerline\
    # zsh
    fonts-powerline\
    && rm -rf /var/lib/apt/lists/*

# INSTASAVE
RUN git clone https://github.com/sameera-madushan/InstaSave.git && \
    cd InstaSave && \
    pip3 install -r requirements.txt

# FINAL RECON
RUN git clone https://github.com/thewhiteh4t/FinalRecon.git && \
    cd FinalRecon && \
    pip3 install -r requirements.txt

# OWASP MARYAM
RUN git clone https://github.com/saeeddhqan/Maryam.git && \
    cd Maryam && \
    pip install -r requirements.txt && \
    chmod +x maryam

# WEBKILLER
RUN git clone https://github.com/ultrasecurity/webkiller.git && \
    cd webkiller && \
    pip3 install -r requirements.txt && \
    chmod +x webkiller.py

# PULSAR
RUN git clone https://github.com/pulsar && \
    cd pulsar && \
    chmod +x install.sh && \
    ./install.sh

# XSSER
RUN apt-get -y install python3-pycurl \
    python3-bs4 \
    python3-geoip \
    python3-geoip2 \
    python3-gi \
    python3-cairocffi \
    python3-selenium \
    firefoxdriver \
    xsser

# XSPEAR
RUN gem install XSpear && \
    gem install colorize && \
    gem install selenium-webdriver && \
    gem install terminal-table && \
    gem install progress_bar

# XXSTRIKE
RUN git clone https://github.com/s0md3v/XSStrike && \
    pip3 install fuzzywuzzy && \
    pip3 install python-levenshtein && \
    pip3 install prettytable && \
    pip3 install requests

# ZAPCLI
RUN pip install --upgrade zapcli

# RAPIDSCAN
RUN wget -O rapidscan.py https://raw.githubusercontent.com/skavngr/rapidscan/master/rapidscan.py && chmod +x rapidscan.py

# STRIKER
RUN git clone https://github.com/s0md3v/Striker.git

# WPSCAN
RUN git clone https://github.com/wpscanteam/wpscan && \
    cd wpscan/ && \
    bundle install && make install

# TESTSSL
RUN git clone https://github.com/s0md3v/Striker.git

# A2SV
RUN git clone https://github.com/hahwul/a2sv.git && \
    cd a2sc && \
    pip install argparse && \
    pip install netaddr && \
    apt-get install openssl

# SQLMAP
RUN git clone https://github.com/sqlmapproject/sqlmap.git sqlmap-dev

# S3SCACNNER
RUN git clone https://github.com/sa7mon/S3Scanner.git

# NOSQL
RUN git clone https://github.com/codingo/NoSQLMap.git && \
    python setup.py install

# WFUZZ
RUN pip install wfuzz

# CORSY
RUN git clone https://github.com/s0md3v/Corsy.git && \
    pip3 install tld && \
    pip3 install requests

# SILVER
RUN git clone https://github.com/s0md3v/Silver && \
    pip3 install -r requirements.txt

# MASSCAN
RUN sudo apt-get -y install git \
    gcc \
    make \
    libcap-dev && \
    git clone https://github.com/robertdavidgraham/masscan && \
    cd masscan && \
    make

# GITROB
RUN go get github.com/michenriksen/gitrob

# GITMINER
RUN git clone http://github.com/UnkL4b/GitMiner && \
    cd GitMiner && \
    pip3 install -r requirements.txt

# GOBUSTER
RUN go get github.com/OJ/gobuster

# DIRSEARCH
RUN git clone https://github.com/maurosoria/dirsearch.git
   
# PARAMSPIDER
RUN git clone https://github.com/devanshbatham/ParamSpider && \
    cd ParamSpider && \
    pip3 install -r requirements.txt

# KNOCKPY
RUN apt-get install python-dnspython && \
    git clone https://github.com/guelfoweb/knock.git

# SUBLIST3R
RUN git clone https://github.com/aboul3la/Sublist3r.git && \
    pip install -r requirements.txt

# PHOTON
RUN cd ${HOME}/Toolkit && \
    git clone https://github.com/s0md3v/Photon.git && \
    cd Photon && \
    chmod +x photon.py && \
    ln -sf ${HOME}/toolkit/teh_s3_bucketeers/bucketeer.sh /usr/local/bin/bucketeer

# AMASS
RUN snap install amass

# ALTDNS
RUN pip install py-altdns

# VULNERABLE SITES FOR TESTING & LEARNING
RUN docker pull vulnerables/web-dvwa # docker run -p 80:80 vulnerables/web-dvwa
RUN docker pull szsecurity/mutillidae  # docker run -p 1337:80 szsecurity/mutlilidae
RUN docker pull szsecurity/webgoat # docker run -p 1337:80 szsecurity/webgoat
RUN docker pull raesene/bwapp

# Git Repository for PentestLab Management
RUN git clone https://github.com/eystsen/pentestlab.git

============================================================================================================================================================================
BACKUP - DZASTERABZ IMAGE

# KALI LINUX BASE IMAGE:LATEST
FROM kalilinux/kali-rolling:latest

# MAINTAINER: DZASTERABZ
LABEL maintainer="abhiramonmail@gmail.com"

# JUMP TO
ENV HOME /root

# BASH RESPONSE
ENV DEBIAN_FRONTEND=noninteractive

# PRESENT WORKING DIRECTORY
WORKDIR /root

# ALL CONFIGURATIONS
RUN apt-get clean && \
    apt-get autoclean && \
    apt-get autoremove
RUN mkdir ${HOME}/Toolkit && \
    mkdir ${HOME}/Wordlist
RUN apt-get -y update && \
    apt-get -y full-upgrade && \
    apt-get install -y --no-install-recommends \
    build-essential \
    tmux \
    gcc \
    pluma \
    nano \
    git \
    wget \
    python3 \
    python3-pip \
    python \
    python-pip \
    curl \
    make \
    man-db \
    net-tools \
    tzdata \
    perl \
    dnsutils \


# PYTHON CONFIGURATION
RUN python -m pip install --upgrade setuptools && python3 -m pip install --upgrade setuptools && python3 -m pip install --upgrade setuptools

RUN apt-get -y install --no-install-recommends\
    dirb \
    exploitdb \
    wpscan \
    uniscan \
    nmap \
    whois \
    nikto \

# METASPLOIT WITH DEPENDENCIES
RUN add-apt-repository -y ppa:webupd8team/java && \
    apt-get -y update && \
    apt-get -y install oracle-java8-installer && \
    apt-get -y update && \
    apt-get -y upgrade && \
    apt-get -y install build-essential \
    libreadline-dev \
    libssl-dev \
    libpq5 \
    libpq-dev \
    libreadline5 \
    libsqlite3-dev \
    libpcap-dev \
    git-core \
    autoconf \
    postgresql \
    pgadmin3 \
    curl \
    zlib1g-dev \
    libxml2-dev \
    libxslt1-dev \
    libyaml-dev \
    gawk \
    bison \
    libffi-dev \
    libgdbm-dev \
    libncurses5-dev \
    libtool \
    sqlite3 \
    libgmp-dev \
    gnupg2 \ 
    dirmngr

RUN cd /opt && \
    sudo git clone https://github.com/rapid7/metasploit-framework.git && \
    sudo chown -R 'whoami' /opt/metasploit-framework && \
    cd metasploit-framework && \
    sudo bash -c 'for MSF in $(ls msf*); do ln -s /opt/metasploit-framework/$MSF /usr/local/bin/$MSF;done'

RUN echo "export PATH=$PATH:/usr/lib/postgresql/10/bin" >> ~/.bashrc && \
    . ~/.bashrc && \
    usermod -a -G postgres whoami && \
    su - 'whoami' && \
    cd /opt/metasploit-framework/ && \
    ./msfdb init

# TIMEZONE DATA
RUN ln -fs /usr/share/zoneinfo/Asia/Calcutta /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata
    
# SEARCHSPLOIT-EXPLOITDB
RUN apt-get -y install exploitdb-bin-sploits \ 
    exploitdb-papers

# INSTASAVE
RUN git clone https://github.com/sameera-madushan/InstaSave.git && \
    cd InstaSave && \
    pip3 install -r requirements.txt

# FINAL RECON
RUN git clone https://github.com/thewhiteh4t/FinalRecon.git && \
    cd FinalRecon && \
    pip3 install -r requirements.txt

# OWASP MARYAM
RUN git clone https://github.com/saeeddhqan/Maryam.git && \
    cd Maryam && \
    pip install -r requirements.txt && \
    chmod +x maryam

# WEBKILLER
RUN git clone https://github.com/ultrasecurity/webkiller.git && \
    cd webkiller && \
    pip3 install -r requirements.txt && \
    chmod +x webkiller.py

# PULSAR
RUN git clone https://github.com/pulsar && \
    cd pulsar && \
    chmod +x install.sh && \
    ./install.sh

# SECLIST
RUN apt-get -y install seclists

# XSSER
RUN apt-get -y install python3-pycurl \
    python3-bs4 \
    python3-geoip \
    python3-geoip2 \
    python3-gi \
    python3-cairocffi \
    python3-selenium \
    firefoxdriver

# XSPEAR
RUN gem install XSpear && \
    gem install colorize && \
    gem install selenium-webdriver && \
    gem install terminal-table && \
    gem install progress_bar

# XXSTRIKE
RUN git clone https://github.com/s0md3v/XSStrike && \
    pip3 install fuzzywuzzy && \
    pip3 install python-levenshtein && \
    pip3 install prettytable && \
    pip3 install requests

# ZAP CLI
RUN pip install --upgrade zapcli

# RAPIDSCAN
RUN wget -O rapidscan.py https://raw.githubusercontent.com/skavngr/rapidscan/master/rapidscan.py && chmod +x rapidscan.py

# STRIKER
RUN git clone https://github.com/s0md3v/Striker.git

# WPSCAN
RUN git clone https://github.com/wpscanteam/wpscan && \
    cd wpscan/ && \
    bundle install && make install

# TESTSSL
RUN git clone https://github.com/s0md3v/Striker.git

# A2SV
RUN git clone https://github.com/hahwul/a2sv.git && \
    cd a2sc && \
    pip install argparse && \
    pip install netaddr && \
    apt-get install openssl

# SQLMAP
RUN git clone https://github.com/sqlmapproject/sqlmap.git sqlmap-dev

# S3SCACNNER
RUN git clone https://github.com/sa7mon/S3Scanner.git

# NOSQL
RUN git clone https://github.com/codingo/NoSQLMap.git && \
    python setup.py install

# WFUZZ
RUN pip install wfuzz

# CORSY
RUN git clone https://github.com/s0md3v/Corsy.git && \
    pip3 install tld && \
    pip3 install requests

# SILVER
RUN git clone https://github.com/s0md3v/Silver && \
    pip3 install -r requirements.txt

# MASSCAN
RUN sudo apt-get -y install git \
    gcc \
    make \
    libcap-dev && \
    git clone https://github.com/robertdavidgraham/masscan && \
    cd masscan && \
    make

# GITROB
RUN go get github.com/michenriksen/gitrob

# GITMINER
RUN git clone http://github.com/UnkL4b/GitMiner && \
    cd GitMiner && \
    pip3 install -r requirements.txt

# GOBUSTER
RUN go get github.com/OJ/gobuster

# DIRSEARCH
RUN git clone https://github.com/maurosoria/dirsearch.git && \
    cd dirsearch && \
   
# PARAMSPIDER
RUN git clone https://github.com/devanshbatham/ParamSpider && \
    cd ParamSpider && \
    pip3 install -r requirements.txt

# KNOCKPY
RUN apt-get install python-dnspython && \
    git clone https://github.com/guelfoweb/knock.git

# SUBLIST3R
RUN git clone https://github.com/aboul3la/Sublist3r.git && \
    pip install -r requirements.txt

# PHOTON
RUN git clone https://github.com/s0md3v/Photon.git

# AMASS
RUN snap install amass

# ALTDNS
RUN pip install py-altdns

# ASSETFINDER
RUN go get -u github.com/tomnomnom/assetfinder

============================================================================================================================================================================
HACKERSPLOIT - DOCKERFILE

FROM ubuntu:18.04

LABEL maintainer="Alexis Ahmed"

# Environment Variables
ENV HOME /root
ENV DEBIAN_FRONTEND=noninteractive


# Working Directory
WORKDIR /root
RUN mkdir ${HOME}/toolkit && \
    mkdir ${HOME}/wordlists

# Install Essentials
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    tmux \
    gcc \
    iputils-ping\
    git \
    vim \
    wget \
    awscli \
    tzdata \
    curl \
    make \
    nmap \
    whois \
    python \
    python-pip \
    python3 \
    python3-pip \
    perl \
    nikto \
    dnsutils \
    net-tools \
    zsh\
    && rm -rf /var/lib/apt/lists/*

# Install Dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    # sqlmap
    sqlmap \
    # dirb
    dirb \
    # dnsenum
    cpanminus \
    # wfuzz
    python-pycurl \
    # knock
    python-dnspython \
    # massdns
    libldns-dev \
    # wpcscan
    libcurl4-openssl-dev \
    libxml2 \
    libxml2-dev \
    libxslt1-dev \
    ruby-dev \
    libgmp-dev \
    zlib1g-dev \
    # masscan
    libpcap-dev \
    # theharvester
    python3.7 \
    # joomscan
    libwww-perl \
    # hydra
    hydra \
    # dnsrecon
    dnsrecon \
    # zsh
    powerline\
    # zsh
    fonts-powerline\
    && rm -rf /var/lib/apt/lists/*

# tzdata
RUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata

# configure python(s)
RUN python -m pip install --upgrade setuptools && python3 -m pip install --upgrade setuptools && python3.7 -m pip install --upgrade setuptools

# dnsenum
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/fwaeytens/dnsenum.git && \
    cd dnsenum/ && \
    chmod +x dnsenum.pl && \
    ln -s ${HOME}/toolkit/dnsenum/dnsenum.pl /usr/bin/dnsenum && \
    cpanm String::Random && \
    cpanm Net::IP && \
    cpanm Net::DNS && \
    cpanm Net::Netmask && \
    cpanm XML::Writer

# Sublist3r
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/aboul3la/Sublist3r.git && \
    cd Sublist3r/ && \
    pip install -r requirements.txt && \
    ln -s ${HOME}/toolkit/Sublist3r/sublist3r.py /usr/local/bin/sublist3r

# wfuzz
RUN pip install wfuzz

# seclists
RUN cd ${HOME}/wordlists && \
    git clone --depth 1 https://github.com/danielmiessler/SecLists.git 

# knock
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/guelfoweb/knock.git && \
    cd knock && \
    chmod +x setup.py && \
    python setup.py install

# massdns
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/blechschmidt/massdns.git && \
    cd massdns/ && \
    make && \
    ln -sf ${HOME}/toolkit/massdns/bin/massdns /usr/local/bin/massdns

# wafw00f
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/enablesecurity/wafw00f.git && \
    cd wafw00f && \
    chmod +x setup.py && \
    python setup.py install

# wpscan
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/wpscanteam/wpscan.git && \
    cd wpscan/ && \
    gem install bundler && bundle install --without test && \
    gem install wpscan

# commix 
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/commixproject/commix.git && \
    cd commix && \
    chmod +x commix.py && \
    ln -sf ${HOME}/toolkit/commix/commix.py /usr/local/bin/commix

# masscan
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/robertdavidgraham/masscan.git && \
    cd masscan && \
    make && \
    ln -sf ${HOME}/toolkit/masscan/bin/masscan /usr/local/bin/masscan    

# altdns
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/infosec-au/altdns.git && \
    cd altdns && \
    pip install -r requirements.txt && \
    chmod +x setup.py && \
    python setup.py install

# teh_s3_bucketeers
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/tomdev/teh_s3_bucketeers.git && \
    cd teh_s3_bucketeers && \
    chmod +x bucketeer.sh && \
    ln -sf ${HOME}/toolkit/teh_s3_bucketeers/bucketeer.sh /usr/local/bin/bucketeer

# Recon-ng
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/lanmaster53/recon-ng.git && \
    cd recon-ng && \
    pip3 install -r REQUIREMENTS && \
    chmod +x recon-ng && \
    ln -sf ${HOME}/toolkit/recon-ng/recon-ng /usr/local/bin/recon-ng

# XSStrike
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/s0md3v/XSStrike.git && \
    cd XSStrike && \
    pip3 install -r requirements.txt && \
    chmod +x xsstrike.py && \
    ln -sf ${HOME}/toolkit/XSStrike/xsstrike.py /usr/local/bin/xsstrike

# theHarvester
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/AlexisAhmed/theHarvester.git && \
    cd theHarvester && \
    python3.7 -m pip install -r requirements.txt && \
    chmod +x theHarvester.py && \
    ln -sf ${HOME}/toolkit/theHarvester/theHarvester.py /usr/local/bin/theharvester

# CloudFlair
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/christophetd/CloudFlair.git && \
    cd CloudFlair && \
    pip install -r requirements.txt && \
    chmod +x cloudflair.py && \
    ln -sf ${HOME}/toolkit/CloudFlair/cloudflair.py /usr/local/bin/cloudflair

# joomscan
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/rezasp/joomscan.git && \
    cd joomscan/ && \
    chmod +x joomscan.pl
COPY joomscan.sh /opt
RUN chmod +x /opt/joomscan.sh && \
    ln -sf /opt/joomscan.sh /usr/local/bin/joomscan

# go
RUN cd /opt && \
    wget https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz && \
    tar -xvf go1.13.3.linux-amd64.tar.gz && \
    rm -rf /opt/go1.13.3.linux-amd64.tar.gz && \
    mv go /usr/local 
ENV GOROOT /usr/local/go
ENV GOPATH /root/go
ENV PATH ${GOPATH}/bin:${GOROOT}/bin:${PATH}

# gobuster
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/OJ/gobuster.git && \
    cd gobuster && \
    go get && go install

# virtual-host-discovery
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/AlexisAhmed/virtual-host-discovery.git && \
    cd virtual-host-discovery && \
    chmod +x scan.rb && \
    ln -sf ${HOME}/toolkit/virtual-host-discovery/scan.rb /usr/local/bin/virtual-host-discovery

# bucket_finder
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/AlexisAhmed/bucket_finder.git && \
    cd bucket_finder && \
    chmod +x bucket_finder.rb && \
    ln -sf ${HOME}/toolkit/bucket_finder/bucket_finder.rb /usr/local/bin/bucket_finder

# dirsearch
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/AlexisAhmed/dirsearch.git && \
    cd dirsearch && \
    chmod +x dirsearch.py && \
    ln -sf ${HOME}/toolkit/dirsearch/dirsearch.py /usr/local/bin/dirsearch

# s3recon
RUN pip3 install --upgrade setuptools && \
    pip3 install pyyaml pymongo requests s3recon

# subfinder
RUN go get -v github.com/projectdiscovery/subfinder/cmd/subfinder


# zsh
RUN git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh &&\
    cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc &&\
    chsh -s /bin/zsh && \
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$HOME/.zsh-syntax-highlighting" --depth 1 && \
    echo "source $HOME/.zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> "$HOME/.zshrc"

# dotdotpwn
RUN cd ${HOME}/toolkit && \
    cpanm Net::FTP && \
    cpanm Time::HiRes && \
    cpanm HTTP::Lite && \
    cpanm Switch && \
    cpanm Socket && \
    cpanm IO::Socket && \
    cpanm Getopt::Std && \
    cpanm TFTP && \
    git clone https://github.com/AlexisAhmed/dotdotpwn.git && \
    cd dotdotpwn && \
    chmod +x dotdotpwn.pl && \
    ln -sf ${HOME}/toolkit/dotdotpwn/dotdotpwn.pl /usr/local/bin/dotdotpwn

# whatweb
RUN cd ${HOME}/toolkit && \
    git clone https://github.com/urbanadventurer/WhatWeb.git && \
    cd WhatWeb && \
    chmod +x whatweb && \
    ln -sf ${HOME}/toolkit/WhatWeb/whatweb /usr/local/bin/whatweb

# fierce
RUN python3 -m pip install fierce
=====================================================================================================================================================================================



